#bubble
input = [3,5,2,5,3,7,5,323,4,56435,3]
print(f"len of input = {len(input)}")
for i in range(0,len(input)):
    for j in range(0,len(input)-1):
        print("compare {} with {}".format(input[j],  input[j+1]))
        if(input[j] > input[j+1]):
            input[j] ,input[j+1]= input[j+1] , input[j]
            print(input)

#insert
input = [3,5,2,5,3,7,5,323,4,56435,3]
n=len(input)
for j in range(0,n-1):
    print("last sorted index j = ",j)
    value_to_insert = input[j+1]
    print(f"value_to_insert: [{j+1}]", value_to_insert)
    for i in range(0,j):
      print("i= ",i)
      print(input)
      print(f"compare [{i}] = {input[i]} with {value_to_insert}")
      if(input[i] >= value_to_insert):
          for l in range(j,i-1,-1 ):
              print(f"move [{l}] to [{l + 1}]")
              input[l+1 ] = input[l]
          print(f"insert value_to_insert to [{i}]")
          input[i] = value_to_insert
          print(input)
          break
print("results : ", input)

a = [3,5,2,5,3,7,5,323,4,56435,3]
n=len(input)
j=0
for i in range(1,n):
    key=a[j+1]
    print(f"key [{j+1}] {a[j+1]}")
    k=j
    while key < a[k] and k >= 0:
        print(f"[{k}] {a[k]} to [{k+1}]")
        a[k+1] =a[k]
        k = k-1
        print(f"[{k}] {a[k]}")
    print(f"[{j+1}] {key} to [{k+1}]")
    a[k+1] = key
    j = j + 1
    print(a)

#Select
a = [3,5,2,5,3,7,5,323,4,56435,3]
n=len(a)
for i in range(0,n):
    s = a[i]
    k=i
    for j in range(i,n):
        if(s > a[j]):
            s=a[j]
            k=j
    a[k]=a[i]
    a[i]=s
    print(a)

#MergSort
a1 = [3,5,2,5,3,7,5,323,4,56435,3]

def merg(a,b):
    print(f"merg {a},{b}")
    c=[]
    i,j=0,0
    while i<len(a) and j < len(b):
        if a[i]>b[j]:
            c.append(b[j])
            j = j +1
            if j == len(b):
                c.extend(a[i:len(a)])
        else:
            c.append(a[i])
            i = i +1
            if(i == len(a)):
                c.extend(b[j:len(b)])
    print(f"merg result: {c}")
    return c

def merg_sort(a):
    print(f"merg sort {a}")
    n=len(a)
    if(n==0):
        return []
    if(n==1):
        return a
    else:
        return merg(merg_sort(a[0:n//2]),merg_sort(a[n//2:n]))

print(merg_sort(a1))
